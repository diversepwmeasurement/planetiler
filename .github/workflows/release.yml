jobs:
  publish:
    permissions:
      contents: write
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Ensure version does not start with 'v'
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: 'version = context.payload.inputs.version;

          if (/^v/.test(version)) throw new Error("Bad version number: " + version)

          '
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: true
    - continue-on-error: true
      name: Cache data/sources
      uses: ./.github/cache-sources-action
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '21'
        server-id: ossrh
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      name: Check tag does not exist yet
      run: if git rev-list "v${{ github.event.inputs.version }}"; then echo "Tag already
        exists. Aborting the release process."; exit 1; fi
    - continue-on-error: true
      run: ./scripts/set-versions.sh "${{ github.event.inputs.version }}"
    - continue-on-error: true
      run: ./scripts/build-release.sh
    - continue-on-error: true
      run: ./scripts/test-release.sh "${{ github.event.inputs.version }}"
    - continue-on-error: true
      name: Create tag
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: "github.rest.git.createRef({\n  owner: context.repo.owner,\n  repo:\
          \ context.repo.repo,\n  ref: \"refs/tags/v${{ github.event.inputs.version\
          \ }}\",\n  sha: context.sha\n})\n"
    - continue-on-error: true
      run: mv planetiler-dist/target/*with-deps.jar planetiler.jar
    - continue-on-error: true
      run: sha256sum planetiler.jar > planetiler.jar.sha256
    - continue-on-error: true
      run: md5sum planetiler.jar > planetiler.jar.md5
    - continue-on-error: true
      name: Install GPG Private Key
      run: 'echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode | gpg
        --batch --import

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        fail_on_unmatched_files: true
        files: 'planetiler.jar*

          '
        tag_name: v${{ github.event.inputs.version }}
    - continue-on-error: true
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        IMAGE_TAGS: ${{ github.event.inputs.image_tags }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
      run: ./scripts/push-release.sh ${{ github.event.inputs.version }}
    timeout-minutes: 20
name: Publish a Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
