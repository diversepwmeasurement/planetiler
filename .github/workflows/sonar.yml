jobs:
  sonar:
    name: Analyze with Sonar
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - continue-on-error: true
      name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: 21
    - continue-on-error: true
      name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-sonar
        path: ~/.sonar/cache
        restore-keys: ${{ runner.os }}-sonar
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: c2cfe8bd7368ced07e84a620b7c2487846e220eb
      name: Analyze with SonarCloud
      run: 'mvn -Dspotless.check.skip -Pcoverage -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

        '
    - continue-on-error: true
      name: Wait for SonarCloud API to update...
      run: sleep 10
    - continue-on-error: true
      if: ${{ github.event_name == 'pull_request' }}
      name: Upload annotations on PRs
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: "const pr = context.payload.pull_request.number;\nconst url = `https://sonarcloud.io/api/issues/search?pullRequest=${pr}&s=FILE_LINE&resolved=false&sinceLeakPeriod=true&ps=100&facets=severities%2Ctypes&componentKeys=onthegomap_planetiler&organization=onthegomap&additionalFields=_all`;\n\
          console.log(\"Fetching \" + url);\nconst response = await github.request(url);\n\
          console.log(\"Got \" + JSON.stringify(response.data));\nresponse.data.issues.forEach(issue\
          \ => {\n  try {\n    if (issue.severity === 'INFO') return;\n    const textRange\
          \ = issue.textRange;\n    const rule = encodeURIComponent(issue.rule);\n\
          \    const message = [\n      issue.message,\n      '',\n      `rule: ${issue.rule}\
          \ (https://sonarcloud.io/organizations/onthegomap/rules?open=${rule}&rule_key=${rule})`,\n\
          \      `issue url: https://sonarcloud.io/project/issues?pullRequest=${pr}&open=${encodeURIComponent(issue.key)}&id=onthegomap_planetiler`\n\
          \    ].join('\\n');\n    const args = {\n      title: `${issue.severity}\
          \ ${issue.type}`,\n      file: issue.component.replace(/^[^:]*:/, ''),\n\
          \      startLine: textRange.startLine,\n      endLine: textRange.endLine,\n\
          \      startColumn: textRange.startOffset,\n      endColumn: textRange.endOffset\n\
          \    };\n    core.warning(message, args);\n    console.log(args);\n  } catch\
          \ (e) {\n    core.error(`Unable to parse sonar issue: ${JSON.stringify(issue)}`);\n\
          \  }\n});\n"
    timeout-minutes: 15
name: Analyze
on:
  repository_dispatch:
    types: trigger-ga___sonar.yml
